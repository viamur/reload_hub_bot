// src/conversations/collaborate.ts
import { Conversation } from "@grammyjs/conversations";
import { Keyboard } from "grammy";
import { mainMenuKeyboard, MyContext } from "../index";

// –ì–ª–∞–≤–Ω–æ–µ –∏–º—è —ç–∫—Å–ø–æ—Ä—Ç–∞ ‚Äì —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å createConversation(...)
export async function collaborateConversation(
  conversation: Conversation<MyContext, MyContext>,
  ctx: MyContext
) {
  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤ —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç collab
  if (!ctx.session) {
    ctx.session = {collab: { type: "", region: "", contact: "" }};
  }

  // 1) –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ (—Ä–∞–Ω—å—à–µ –±—ã–ª ¬´—Ç–∏–ø¬ª)
  const typeKb = new Keyboard()
    .text("–†–µ—Å—Ç–æ—Ä–∞–Ω").text("–ú–∞–≥–∞–∑–∏–Ω").row()
    .text("–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ").text("–û–°–ë–ë").text("–Ü–Ω—à–µ").resized().oneTime()
  await ctx.reply("üéâ –û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç–∏–ø –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É:", { reply_markup: typeKb });
  const nameMsg = await conversation.waitFor("message:text");
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –ø–æ–ª–µ type (–∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ)
  ctx.session.collab.type = nameMsg.message.text;

  // 2) –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–π–æ–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–Ω–æ–ø–æ–∫
  const districtKb = new Keyboard()
    .text("–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ-–ú—ñ—Å—å–∫–∏–π —Ä–∞–π–æ–Ω").row()
    .text("–¢–µ—Ä–Ω—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω").row()
    .text("–Ü–Ω–≥—É–ª–µ—Ü—å–∫–∏–π —Ä–∞–π–æ–Ω").row()
    .text("–ü–æ–∫—Ä–æ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω").row()
    .text("–î–æ–≤–≥–∏–Ω—Ü—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω").row()
    .text("–ú–µ—Ç–∞–ª—É—Ä–≥—ñ–π–Ω–∏–π —Ä–∞–π–æ–Ω").row();
  await ctx.reply("üìç –û–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ä–∞–π–æ–Ω:", { reply_markup: districtKb });
  const districtMsg = await conversation.waitFor("message:text");
  ctx.session.collab.region = districtMsg.message.text;

  // 3) –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø—Ä–æ—Å–∏–º —á–µ—Ä–µ–∑ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º¬ª
  const contactKb = new Keyboard().requestContact("üìû –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º").row();
  await ctx.reply(
    "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
    { reply_markup: contactKb }
  );
  const contactUpdate = await conversation.waitFor("message:contact");
  ctx.session.collab.contact = contactUpdate.message.contact.phone_number;

  // TODO: –∑–¥–µ—Å—å sheetService.addCollaboration(ctx.session.collab)

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  await ctx.reply(
    `‚úÖ *–î—è–∫—É—î–º–æ! –û—Å—å –¥–∞–Ω—ñ –≤–∞—à–æ—ó –∫–æ–º–ø–∞–Ω—ñ—ó:* \n` +
    `üè¢ *–ù–∞–∑–≤–∞:* ${ctx.session.collab.type}\n` +
    `üìç *–†–∞–π–æ–Ω:* ${ctx.session.collab.region}\n` +
    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* +${ctx.session.collab.contact}`,
    { parse_mode: "Markdown" }
  );

  // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
  ctx.session.collab.type = "";
  ctx.session.collab.region = "";
  ctx.session.collab.contact = "";

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  await ctx.reply("–ü–æ–≤–µ—Ä—Ç–∞—é—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", {
    reply_markup: mainMenuKeyboard,
  });
}
