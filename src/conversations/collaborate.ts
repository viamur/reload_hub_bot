import { Conversation } from "@grammyjs/conversations";
import { MyContext } from "../index";
import {
  businessTypeKeyboard,
  districtMenuKeyboard,
  mainMenuKeyboard,
  shareContactKeyboard
} from '../keyboards/keyBoards';
const adminId = process.env.ADMIN_ID;

export async function collaborateConversation(
  conversation: Conversation<MyContext, MyContext>,
  ctx: MyContext
) {
  if (!ctx.session) {
    ctx.session = {collab: { type: "", region: "", contact: "" }};
  }

  await ctx.reply("üéâ –û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç–∏–ø –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É:", { reply_markup: businessTypeKeyboard.oneTime() });
  const nameMsg = await conversation.waitFor("message:text");
  ctx.session.collab.type = nameMsg.message.text;

  await ctx.reply("üìç –û–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ä–∞–π–æ–Ω:", { reply_markup: districtMenuKeyboard.oneTime() });
  const districtMsg = await conversation.waitFor("message:text");
  ctx.session.collab.region = districtMsg.message.text;

  await ctx.reply(
    "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
    { reply_markup: shareContactKeyboard }
  );
  const contactUpdate = await conversation.waitFor("message:contact");
  ctx.session.collab.contact = contactUpdate.message.contact.phone_number;

  // TODO: –∑–¥–µ—Å—å sheetService.addCollaboration(ctx.session.collab)

  await ctx.reply(
    `‚úÖ *–î—è–∫—É—î–º–æ! –û—Å—å –¥–∞–Ω—ñ –≤–∞—à–æ—ó –∫–æ–º–ø–∞–Ω—ñ—ó:* \n` +
    `üè¢ *–¢–∏–ø:* ${ctx.session.collab.type}\n` +
    `üìç *–†–∞–π–æ–Ω:* ${ctx.session.collab.region}\n` +
    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* +${ctx.session.collab.contact}`,
    { parse_mode: "Markdown" }
  );

  if (adminId) {
    await ctx.api.sendMessage(adminId,
    `‚úÖ*–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é:*\n` +
    `*–¢–∏–ø:* ${ctx.session.collab.type}\n` +
    `*–†–∞–π–æ–Ω:* ${ctx.session.collab.region}\n` +
    `*–¢–µ–ª–µ—Ñ–æ–Ω:* +${ctx.session.collab.contact}\n\n` +
    `*USER_NAME:* ${ctx.from?.username || ''}\n` +
    `*FULL_NAME:* ${ctx.from?.first_name} ${ctx.from?.last_name || ''}\n` +
    `*ID:* ${ctx.from?.id}\n` +
    `*DATE:* ${new Date().toLocaleDateString('uk-UA', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
    })}`,
      { parse_mode: "Markdown" });
  }


  ctx.session.collab.type = "";
  ctx.session.collab.region = "";
  ctx.session.collab.contact = "";


  await ctx.reply("–ü–æ–≤–µ—Ä—Ç–∞—é—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", {
    reply_markup: mainMenuKeyboard,
  });
}
